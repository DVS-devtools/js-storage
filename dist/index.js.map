{"version":3,"sources":["webpack://JsStorage/webpack/universalModuleDefinition","webpack://JsStorage/webpack/bootstrap","webpack://JsStorage/./src/utils/index.ts","webpack://JsStorage/./src/index.ts","webpack://JsStorage/./src/storages/index.ts","webpack://JsStorage/./src/storages/ObjectStorage/index.ts","webpack://JsStorage/./src/storages/LocalStorage/index.ts","webpack://JsStorage/./src/storages/CookieStorage/index.ts","webpack://JsStorage/./src/storages/CookieStorage/CookieIterator.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","tryParse","JSON","parse","e","storages_1","Storage","this","logger","debug","log","info","warn","error","verbose","storages","localstorage","LocalStorage","cookie","CookieStorage","jsobject","ObjectStorage","selectedStorage","init","options","type","setStorage","setLogger","storage","getStorage","set","setMultiple","params","result","getMultiple","keys","delete","isLocalStorageSupported","localStorage","setItem","getItem","removeItem","default","ObjectStorage_1","LocalStorage_1","CookieStorage_1","jsObj","_this","reduce","obj","k","forEach","utils_1","undefined","stringify","Array","from","length","x","CookieIterator_1","Cookiestorage","newCookieIterator","CookieIterator","iter","next","newCookie","Date","exdays","setTime","getTime","toUTCString","exhours","exminutes","path","document","toReturn","indexOf","opts","assign","cookiesList","split","charPos","shift","values","substring"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"JsStorage\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JsStorage\"] = factory();\n\telse\n\t\troot[\"JsStorage\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Normalize a value that could be a stringyfied JSON\n * @param value\n */\nexports.tryParse = function (value) {\n    try {\n        return JSON.parse(value);\n    }\n    catch (e) {\n        return value;\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storages_1 = require(\"./storages\");\n/**\n * Storage is the library to save and get data in different ways.\n */\nvar Storage = /** @class */ (function () {\n    /**\n     * @ignore\n     */\n    function Storage() {\n        /**\n         * Object to log the Storage operations, should match the window.console API\n         */\n        this.logger = {\n            debug: function () { },\n            log: function () { },\n            info: function () { },\n            warn: function () { },\n            error: function () { },\n        };\n        /**\n         * If true, logs also the get operations\n         */\n        this.verbose = false;\n        /**\n         * The available storages\n         */\n        this.storages = {\n            localstorage: storages_1.LocalStorage,\n            cookie: storages_1.CookieStorage,\n            jsobject: storages_1.ObjectStorage,\n        };\n        this.selectedStorage = this.storages.cookie;\n    }\n    /**\n     * @deprecated Use setLogger and setStorage directly\n     * Init storage module\n     * @param {Object} [options={}]\n     * @param {String} [options.type='cookie'] Define the default storage you want to use.\n     * Must be one of the supported storages:\n     * * localstorage\n     * * cookie\n     * * jsobject\n     * @param {Object} options.logger any object that follow the window.console interface:\n     * must have this methods:\n     * * log\n     * * debug\n     * * info\n     * * warn\n     * * error\n     * @param {Boolean} [options.verbose=false] If true the logger is called also on get methods\n     * @example\n     * <br>\n     * <pre>\n     * Storage.init({\n     *     type: 'jsobject',\n     *     logger: console,\n     *     verbose: true\n     * });\n     * </pre>\n     */\n    Storage.prototype.init = function (options) {\n        if (options === void 0) { options = {}; }\n        if (options.type) {\n            this.setStorage(options.type);\n        }\n        if (options.logger) {\n            this.setLogger(options.logger, options.verbose || false);\n        }\n        this.logger.log('Storage', 'init', options);\n    };\n    /**\n     * Set the logger object, should implements an interface similar to window.console\n     * @param {Object} logger\n     * @param {Boolean} verbose\n     * @example\n     * <br><pre>\n     * Storage.setLogger(console)\n     * Storage.setLogger(console, true) // verbose\n     * </pre>\n     */\n    Storage.prototype.setLogger = function (logger, verbose) {\n        if (verbose === void 0) { verbose = false; }\n        this.logger = logger;\n        this.verbose = verbose;\n    };\n    /**\n     * Set the default storage to use\n     * Available storages:\n     * * localStorage\n     * * cookie\n     * * js object\n     * Can be overridden for every call with the \"type\" param\n     * @param {String} storage\n     * @example\n     * <br><pre>\n     * Storage.setStorage('cookie')\n     * </pre>\n     */\n    Storage.prototype.setStorage = function (storage) {\n        if (this.storages.hasOwnProperty(storage)) {\n            this.selectedStorage = this.storages[storage];\n        }\n        else {\n            this.logger.warn(\"Storage \" + storage + \" not supported, fallback to cookie storage\");\n            this.selectedStorage = this.storages.cookie;\n        }\n    };\n    /**\n     * Get the storage to use\n     * @ignore\n     * @param options\n     */\n    Storage.prototype.getStorage = function (options) {\n        if (options && options.type) {\n            return this.storages[options.type];\n        }\n        return this.selectedStorage;\n    };\n    /**\n     * Set a value in the storage by the given key\n     * @param {String} key key to identify the data\n     * @param {*} value the data to store\n     * @param {Object} options\n     * @param {string} [options.type=null] storage type to use,\n     * use only if we want to save data\n     * to a different storage than the default (set with setStorage)\n     * @param {Integer} [options.exdays=null] expirations days of stored data\n     * (only for cookie storage)\n     * @param {Integer} [options.exhours=null] expirations hours of stored data\n     * (only for cookie storage)\n     * @param {Integer} [options.exminutes=null] expirations minutes of stored data\n     * (only for cookie storage)\n     * @example\n     * <br><pre>\n     * // Storage saves variable in default type storage (defined in init method)\n     * Storage.set('country', 'it');\n     *\n     * // Storage saves variable as cookie\n     * Storage.set('isLogged', true, {type: 'cookie'});\n     * </pre>\n     */\n    Storage.prototype.set = function (key, value, options) {\n        if (options === void 0) { options = {}; }\n        this.getStorage(options).set(key, value, options);\n        this.logger.log('Storage', 'set', key, value, options);\n    };\n    /**\n     * Set multiple values in the storage\n     * @param {Object} params key values pair to save\n     * @param {Object} options\n     * @param {string} [options.type=null] storage type to use,\n     * use only if we want to save data\n     * to a different storage than the default (set with setStorage)\n     * @param {Integer} [options.exdays=null] expirations days of stored data\n     * (only for cookie storage)\n     * @param {Integer} [options.exhours=null] expirations hours of stored data\n     * (only for cookie storage)\n     * @param {Integer} [options.exminutes=null] expirations minutes of stored data\n     * (only for cookie storage)\n     * @example\n     * <br><pre>\n     * // Storage saves variables in default type storage (defined in init method)\n     * Storage.setMultiple({country: 'it', isLogged: true});\n     *\n     * // Storage saves variables as cookies\n     * Storage.setMultiple({country: 'it', isLogged: true}, {type: 'cookie'});\n     * </pre>\n     */\n    Storage.prototype.setMultiple = function (params, options) {\n        if (options === void 0) { options = {}; }\n        this.getStorage(options).setMultiple(params, options);\n        this.logger.log('Storage', 'setMultiple', params, options);\n    };\n    /**\n     * Get a value from the storage by the given key\n     * @param {String} key to identify the data\n     * @param {Object} options\n     * @param {string} [options.type=null] storage type to use,\n     * use only if we want to save data\n     * to a different storage than the default (set with setStorage)\n     * @return {*}\n     * @example\n     * <br><pre>\n     * // Storage loads variable from default type storage (defined in init method)\n     * Storage.get('country', 'it');\n     *\n     * // Storage loads variable as cookie\n     * Storage.get('isLogged', {type: 'cookie'});\n     * </pre>\n     */\n    Storage.prototype.get = function (key, options) {\n        if (options === void 0) { options = {}; }\n        var result = this.getStorage(options).get(key, options);\n        if (this.verbose) {\n            this.logger.log('Storage', 'get', key, result, options);\n        }\n        return result;\n    };\n    /**\n     * Get multiple values from the storage\n     * @param {Array} keys array of keys to identify the data\n     * @param {Object} options\n     * @param {string} [options.type=null] storage type to use,\n     * use only if we want to save data\n     * to a different storage than the default (set with setStorage)\n     * @return {*|{}}\n     * @example\n     * <br><pre>\n     * // Storage loads variables from default type storage (defined in init method)\n     * Storage.getMultiple(['country', 'isLogged']);\n     * // it returns {country: 'it', isLogged: true}\n     *\n     * // Storage loads variables as cookie\n     * Storage.getMultiple(['country', 'isLogged'], {type: 'cookie'});\n     * // it returns {country: 'it', isLogged: true}\n     * </pre>\n     */\n    Storage.prototype.getMultiple = function (keys, options) {\n        if (options === void 0) { options = {}; }\n        var result = this.getStorage(options).getMultiple(keys, options);\n        if (this.verbose) {\n            this.logger.log('Storage', 'getMultiple', keys, result, options);\n        }\n        return result;\n    };\n    /**\n     * Delete a stored value\n     * @param {String} key key to identify the value\n     * @param {Object} options\n     * @param {string} [options.type=null] storage type to use,\n     * use only if we want to save data\n     * to a different storage than the default (set with setStorage)\n     * @example\n     * <br><pre>\n     * // Storage delete variable from default type storage (defined in init method)\n     * Storage.delete('country');\n     *\n     * // Storage delete variable as cookie\n     * Storage.delete('country', {type: 'cookie'});\n     * </pre>\n     */\n    Storage.prototype.delete = function (key, options) {\n        if (options === void 0) { options = {}; }\n        this.getStorage(options).delete(key, options);\n        this.logger.log('Storage', 'delete', key, options);\n    };\n    /**\n     * Check if the browser supports the local storage\n     * @return {boolean} **true** if supported, else **false**\n     * @example\n     * <br><pre>\n     *  if(Storage.isLocalStorageSupported()) {\n     *       // can store a localStorage key\n     *   } else {\n     *       alert('local storage is not supported');\n     *   }\n     * </pre>\n     */\n    Storage.prototype.isLocalStorageSupported = function () {\n        var name = 'test';\n        try {\n            window.localStorage.setItem(name, name);\n            window.localStorage.getItem(name);\n            window.localStorage.removeItem(name);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    return Storage;\n}());\nexports.default = new Storage();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ObjectStorage_1 = require(\"./ObjectStorage\");\nexports.ObjectStorage = ObjectStorage_1.default;\nvar LocalStorage_1 = require(\"./LocalStorage\");\nexports.LocalStorage = LocalStorage_1.default;\nvar CookieStorage_1 = require(\"./CookieStorage\");\nexports.CookieStorage = CookieStorage_1.default;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @ignore\n */\nvar ObjectStorage = /** @class */ (function () {\n    function ObjectStorage() {\n        this.jsObj = {};\n    }\n    ObjectStorage.prototype.get = function (key) {\n        return this.jsObj[key];\n    };\n    ObjectStorage.prototype.set = function (key, value) {\n        this.jsObj[key] = value;\n    };\n    ObjectStorage.prototype.getMultiple = function (keys) {\n        var _this = this;\n        if (keys) {\n            return keys.reduce(function (obj, k) {\n                obj[k] = _this.get(k);\n                return obj;\n            }, {});\n        }\n        return this.jsObj;\n    };\n    ObjectStorage.prototype.setMultiple = function (params) {\n        var _this = this;\n        Object.keys(params).forEach(function (k) {\n            _this.set(k, params[k]);\n        });\n    };\n    ObjectStorage.prototype.delete = function (key) {\n        delete this.jsObj[key];\n    };\n    return ObjectStorage;\n}());\nexports.default = new ObjectStorage();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../utils\");\n/**\n * @ignore\n */\nvar LocalStorage = /** @class */ (function () {\n    function LocalStorage() {\n    }\n    LocalStorage.prototype.get = function (key) {\n        return utils_1.tryParse(window.localStorage.getItem(key) || undefined);\n    };\n    LocalStorage.prototype.set = function (key, value) {\n        window.localStorage.setItem(key, JSON.stringify(value));\n    };\n    LocalStorage.prototype.getMultiple = function (keys) {\n        var _this = this;\n        if (keys) {\n            return keys.reduce(function (obj, k) {\n                obj[k] = _this.get(k);\n                return obj;\n            }, {});\n        }\n        return Array.from(Array(window.localStorage.length), function (x, i) { return i; }).reduce(function (obj, k) {\n            var key = window.localStorage.key(k);\n            obj[key] = _this.get(key);\n            return obj;\n        }, {});\n    };\n    LocalStorage.prototype.setMultiple = function (params) {\n        var _this = this;\n        Object.keys(params).forEach(function (k) {\n            _this.set(k, params[k]);\n        });\n    };\n    LocalStorage.prototype.delete = function (key) {\n        window.localStorage.removeItem(key);\n    };\n    return LocalStorage;\n}());\nexports.default = new LocalStorage();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../utils\");\nvar CookieIterator_1 = require(\"./CookieIterator\");\n/**\n * @ignore\n */\nvar Cookiestorage = /** @class */ (function () {\n    function Cookiestorage() {\n    }\n    Cookiestorage.prototype.newCookieIterator = function () {\n        return new CookieIterator_1.CookieIterator();\n    };\n    Cookiestorage.prototype.get = function (key) {\n        var iter = this.newCookieIterator();\n        var result = iter.next();\n        while (result) {\n            if (result[0] === key) {\n                return utils_1.tryParse(result[1]);\n            }\n            result = iter.next();\n        }\n        return undefined;\n    };\n    Cookiestorage.prototype.set = function (key, value, options) {\n        var newCookie = key + \"=\" + JSON.stringify(value);\n        var d = new Date();\n        if (options) {\n            if (typeof options.exdays !== 'undefined') {\n                d.setTime(d.getTime() + (options.exdays * 24 * 60 * 60 * 1000));\n                newCookie += \"; expires=\" + d.toUTCString();\n            }\n            else if (typeof options.exhours !== 'undefined') {\n                d.setTime(d.getTime() + (options.exhours * 60 * 60 * 1000));\n                newCookie += \"; expires=\" + d.toUTCString();\n            }\n            else if (typeof options.exminutes !== 'undefined') {\n                d.setTime(d.getTime() + (options.exminutes * 60 * 1000));\n                newCookie += \"; expires=\" + d.toUTCString();\n            }\n            else {\n                d.setTime(d.getTime() + (7 * 24 * 60 * 60 * 1000)); // SET DEFAULT EXDAYS TO 7\n                newCookie += \"; expires=\" + d.toUTCString();\n            }\n            if (typeof options.path !== 'undefined') {\n                newCookie += \"; path=\" + options.path;\n            }\n        }\n        document.cookie = newCookie;\n    };\n    Cookiestorage.prototype.getMultiple = function (keys) {\n        var toReturn = {};\n        var iter = this.newCookieIterator();\n        var result = iter.next();\n        while (result) {\n            if (!keys || keys.indexOf(result[0]) > -1) {\n                toReturn[result[0]] = utils_1.tryParse(result[1]);\n            }\n            result = iter.next();\n        }\n        return toReturn;\n    };\n    Cookiestorage.prototype.setMultiple = function (params, options) {\n        var _this = this;\n        Object.keys(params).forEach(function (k) {\n            _this.set(k, params[k], options);\n        });\n    };\n    Cookiestorage.prototype.delete = function (key, options) {\n        if (options === void 0) { options = {}; }\n        var opts = Object.assign({}, options, { exdays: -1 });\n        this.set(key, '', opts);\n    };\n    return Cookiestorage;\n}());\nexports.default = new Cookiestorage();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @ignore\n */\nvar CookieIterator = /** @class */ (function () {\n    function CookieIterator() {\n        this.cookiesList = document.cookie.split(';') || [];\n    }\n    CookieIterator.prototype.next = function () {\n        var toReturn;\n        var charPos;\n        if (this.cookiesList.length === 0) {\n            return undefined;\n        }\n        // dequeue first element of cookiesList\n        toReturn = this.cookiesList.shift();\n        // remove leading whitespaces only\n        charPos = 0;\n        while (toReturn[charPos] === ' ') {\n            charPos++; // eslint-disable-line\n        }\n        toReturn = toReturn.substring(charPos);\n        // split 'key=value' string by first '=' occurrence (regex greedy operator)\n        var values = toReturn.split(/=(.+)?/);\n        return [values[0], values[1]];\n    };\n    return CookieIterator;\n}());\nexports.CookieIterator = CookieIterator;\n"],"sourceRoot":""}